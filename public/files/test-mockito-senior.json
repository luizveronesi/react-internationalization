[{"question":"What is the default behavior of a mock in Mockito?","answers":["It returns null for object types, zero for numeric primitives, and false for boolean primitives.","It throws an UnsupportedOperationException for any method call.","It logs a warning message but returns default values.","It automatically returns a pre-recorded value."],"correct":0,"translations":{"it":["Qual è il comportamento predefinito di un mock in Mockito?","Ritorna null per i tipi oggetto, zero per i tipi primitivi numerici e false per i tipi primitivi booleani.","Lancia una UnsupportedOperationException per qualsiasi chiamata di metodo.","Registra un messaggio di avvertimento ma restituisce valori predefiniti.","Ritorna automaticamente un valore preregistrato."]}},{"question":"Which of the following methods verifies that a method was called a certain number of times?","answers":["verify","times","atLeast","atMost"],"correct":0,"translations":{"it":["Quale dei seguenti metodi verifica che un metodo sia stato chiamato un certo numero di volte?","verify","times","atLeast","atMost"]}},{"question":"What is the purpose of the @Mock annotation in Mockito?","answers":["To create a mock object","To inject a mock object","To verify a method call","To capture method arguments"],"correct":0,"translations":{"it":["Qual è lo scopo dell'annotazione @Mock in Mockito?","Creare un oggetto mock","Iniettare un oggetto mock","Verificare una chiamata di metodo","Catturare argomenti di metodo"]}},{"question":"How would you mock a static method in Mockito?","answers":["Using PowerMockito framework","By declaring the method as final","By annotating the method with @Mock","Static methods cannot be mocked"],"correct":0,"translations":{"it":["Come mockeresti un metodo statico in Mockito?","Utilizzando il framework PowerMockito","Dichiarando il metodo finale","Annotando il metodo con @Mock","I metodi statici non possono essere simulati"]}},{"question":"Which method should be used to define the return value of a mock method call?","answers":["thenReturn","when","doReturn","thenAnswer"],"correct":0,"translations":{"it":["Quale metodo dovrebbe essere utilizzato per definire il valore di ritorno di una chiamata a un metodo mockato?","thenReturn","when","doReturn","thenAnswer"]}},{"question":"Analyze the following code to identify the purpose.","answers":["Verifies if the 'add' method is called exactly once","Simulates a method call to 'add'","Mocks the 'List' class","Captures the argument passed to 'add' method"],"correct":0,"code":"List mockedList = mock(List.class); verify(mockedList, times(1)).add(\"element\");","translations":{"it":["Analizza il seguente codice per identificare lo scopo.","Verifica se il metodo 'add' viene chiamato esattamente una volta","Simula una chiamata di metodo a 'add'","Simula la classe 'List'","Cattura l'argomento passato al metodo 'add'"]}},{"question":"What does the following code snippet accomplish?","answers":["Sets a value to be returned by a method","Calls the actual method on a mock","Verifies that the method is never called","Captures argument passed to method"],"correct":0,"code":"when(mockedList.get(0)).thenReturn(\"first\");","translations":{"it":["Cosa realizza il seguente snippet di codice Mockito?","Imposta un valore da restituire da un metodo","Chiama il metodo reale su un mock","Verifica che il metodo non venga mai chiamato","Cattura l'argomento passato al metodo"]}},{"question":"Identify the purpose of this Mockito code.","answers":["Throws an exception when a method is called","Returns null when a method is called","Verifies a method is called at least once","Captures the arguments passed to methods"],"correct":0,"code":"doThrow(new RuntimeException()).when(mockedList).clear();","translations":{"it":["Identifica lo scopo di questo codice Mockito.","Lancia un'eccezione quando un metodo viene chiamato","Ritorna null quando un metodo viene chiamato","Verifica che un metodo venga chiamato almeno una volta","Cattura gli argomenti passati ai metodi"]}},{"question":"What does the following code snippet achieve?","answers":["Allows capturing arguments passed to a method","Sets the mock behavior to call the real method","Ensures no interactions with a mock","Returns a specific value for multiple method calls"],"correct":1,"code":"when(mockedList.get(anyInt())).thenAnswer(invocation -> invocation.callRealMethod());","translations":{"it":["Cosa realizza il seguente snippet di codice?","Permette di catturare gli argomenti passati a un metodo","Imposta il comportamento del mock per chiamare il metodo reale","Garantisce nessuna interazione con un mock","Ritorna un valore specifico per più chiamate di metodo"]}},{"question":"What does this Mockito code snippet verify?","answers":["That no other methods are called on mockedList","That only specified methods are called on mockedList","That at least one method is called on mockedList","That mockedList is not null"],"correct":0,"code":"verifyNoMoreInteractions(mockedList);","translations":{"it":["Cosa verifica questo snippet di codice Mockito?","Che nessun altro metodo è chiamato su mockedList","Che solo i metodi specificati sono chiamati su mockedList","Che almeno un metodo sia chiamato su mockedList","Che mockedList non sia null"]}}]