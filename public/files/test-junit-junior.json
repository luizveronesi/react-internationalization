[{"question":"What is the primary purpose of JUnit?","answers":["To write and run tests for Java applications","To manage Java projects","To build graphical user interfaces","To perform system administration tasks"],"correct":0,"translations":{"it":["Qual è lo scopo principale di JUnit?","Scrivere ed eseguire test per applicazioni Java","Gestire progetti Java","Costruire interfacce utente grafiche","Eseguire compiti di amministrazione del sistema"]}},{"question":"Which JUnit annotation is used to denote a test method?","answers":["@Test","@RunWith","@Before","@After"],"correct":0,"translations":{"it":["Quale annotazione JUnit viene utilizzata per denotare un metodo di test?","@Test","@RunWith","@Before","@After"]}},{"question":"Which assertion method is used to check that a condition is true?","answers":["assertTrue","assertFalse","assertEquals","assertNull"],"correct":0,"translations":{"it":["Quale metodo di asserzione viene utilizzato per verificare che una condizione sia vera?","assertTrue","assertFalse","assertEquals","assertNull"]}},{"question":"What is the role of the @Before annotation in JUnit?","answers":["It runs the annotated method before each test","It runs the annotated method after each test","It runs the annotated method before all tests","It runs the annotated method after all tests"],"correct":0,"translations":{"it":["Qual è il ruolo dell'annotazione @Before in JUnit?","Esegue il metodo annotato prima di ogni test","Esegue il metodo annotato dopo ogni test","Esegue il metodo annotato prima di tutti i test","Esegue il metodo annotato dopo tutti i test"]}},{"question":"What is the correct way to write a test case using JUnit?","answers":["public class MyTest extends TestCase { @Test public void testMethod() { ... } }","public class MyTest extends UnitTest { @Test public void testMethod() { ... } }","public class MyTest extends Test { @Test public void testMethod() { ... } }","public class MyTest extends JavaTest { @Test public void testMethod() { ... } }"],"correct":0,"translations":{"it":["Qual è il modo corretto per scrivere un caso di test utilizzando JUnit?","public class MyTest extends TestCase { @Test public void testMethod() { ... } }","public class MyTest extends UnitTest { @Test public void testMethod() { ... } }","public class MyTest extends Test { @Test public void testMethod() { ... } }","public class MyTest extends JavaTest { @Test public void testMethod() { ... } }"]}},{"question":"What will be the result of running the following JUnit test?","answers":["The test passes","The test fails","A compilation error","The test is ignored"],"correct":1,"code":"import static org.junit.Assert.assertEquals;\nimport org.junit.Test;\npublic class MyTest {\n  @Test\n  public void testAddition() {\n    assertEquals(5, 2 + 3);\n  }\n}","translations":{"it":["Quale sarà il risultato dell'esecuzione del seguente test JUnit?","Il test passa","Il test fallisce","Un errore di compilazione","Il test è ignorato"]}},{"question":"What is the problem with this JUnit test?","answers":["The assertEquals parameters are in the wrong order","The @Test annotation is missing","The test method is not public","The class does not extend TestCase"],"correct":1,"code":"import static org.junit.Assert.assertEquals;\npublic class MyTest {\n  public void testAddition() {\n    assertEquals(5, 2 + 3);\n  }\n}","translations":{"it":["Qual è il problema con questo test JUnit?","I parametri di assertEquals sono nell'ordine sbagliato","Manca l'annotazione @Test","Il metodo di test non è pubblico","La classe non estende TestCase"]}},{"question":"What is the expected output for this JUnit test?","answers":["Test passes without errors","Test fails and displays comparison failure","Test throws an exception","Test is ignored"],"correct":0,"code":"import static org.junit.Assert.assertTrue;\nimport org.junit.Test;\npublic class MyTest {\n  @Test\n  public void testCondition() {\n    assertTrue(1 < 2);\n  }\n}","translations":{"it":["Qual è l'output previsto per questo test JUnit?","Il test passa senza errori","Il test fallisce e mostra il fallimento del confronto","Il test lancia un'eccezione","Il test è ignorato"]}},{"question":"What is the issue in the following JUnit test?","answers":["The test will fail because assertTrue is incorrect","The test method should be static","The @Test annotation should be before the class","No issue, the test is correct"],"correct":3,"code":"import static org.junit.Assert.assertTrue;\nimport org.junit.Test;\npublic class MyTest {\n  @Test\n  public void testCondition() {\n    assertTrue(true);\n  }\n}","translations":{"it":["Qual è il problema nel seguente test JUnit?","Il test fallirà perché assertTrue è errato","Il metodo di test dovrebbe essere statico","L'annotazione @Test dovrebbe essere prima della classe","Nessun problema, il test è corretto"]}},{"question":"What will happen if you run the following JUnit test?","answers":["Test passes successfully","Test fails with a comparison error","Code raises a NullPointerException","Test is ignored"],"correct":2,"code":"import static org.junit.Assert.assertEquals;\nimport org.junit.Test;\npublic class MyTest {\n  @Test\n  public void testNull() {\n    String text = null;\n    assertEquals(\"Hello\", text);\n  }\n}","translations":{"it":["Cosa succederà se esegui il seguente test JUnit?","Il test passa con successo","Il test fallisce con un errore di confronto","Il codice genera una NullPointerException","Il test è ignorato"]}}]