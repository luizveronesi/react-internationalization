[{"question":"What is Mockito primarily used for in Java testing?","answers":["Creating user interfaces","Mocking objects for unit testing","Performing database operations","Testing performance metrics"],"correct":1,"translations":{"it":["Per cosa viene utilizzato principalmente Amazon S3?","Creare interfacce utente","Mocking di oggetti per i test unitari","Eseguire operazioni sul database","Testare le metriche di prestazione"]}},{"question":"How do you verify that a mocked method was called in Mockito?","answers":["Using the assert method","Using the verify method","Using the check method","Using the validate method"],"correct":1,"translations":{"it":["Quale servizio AWS è progettato per analisi scalabili di data warehouse?","Utilizzando il metodo assert","Utilizzando il metodo verify","Utilizzando il metodo check","Utilizzando il metodo validate"]}},{"question":"What is the advantage of using @Mock annotation?","answers":["Reduces boilerplate code","Improves performance","Simplifies database operations","Enhances security"],"correct":0,"translations":{"it":["Come puoi gestire in modo sicuro l'accesso ai servizi e alle risorse AWS?","Riduce il codice boilerplate","Migliora le prestazioni","Semplifica le operazioni sul database","Migliora la sicurezza"]}},{"question":"What does the @InjectMocks annotation do in Mockito?","answers":["Injects mocks into an initialization method","Injects real objects instead of mocks","Creates and injects mock objects into the tested class","None of the above"],"correct":2,"translations":{"it":["Quale dei seguenti è un servizio di calcolo serverless completamente gestito in AWS?","Inietta i mock in un metodo di inizializzazione","Inietta oggetti reali invece di mock","Crea e inietta oggetti mock nella classe testata","Nessuna delle precedenti"]}},{"question":"Which method is used to create a mock object in Mockito?","answers":["mock()","createMock()","Mockito()","generateMock()"],"correct":0,"translations":{"it":["Che tipo di servizio è Amazon EC2?","mock()","createMock()","Mockito()","generateMock()"]}},{"question":"Consider the following code, what will be the output?","answers":["Test Data","Real Data","Null","Exception thrown"],"correct":0,"code":"MyClass myClass = Mockito.mock(MyClass.class);\nMockito.when(myClass.getData()).thenReturn(\"Test Data\");\nSystem.out.println(myClass.getData());","translations":{"it":["Cosa farà il seguente comando AWS CLI?","Test Data","Dati reali","Null","Eccezione generata"]}},{"question":"What will be the result of this code block?","answers":["Throws an exception","Passes successfully","Fails at last line","Compiles but does not run"],"correct":2,"code":"List<String> mockedList = Mockito.mock(List.class);\nmockedList.add(\"one\");\nMockito.verify(mockedList).add(\"one\");\nMockito.verify(mockedList).add(\"two\");","translations":{"it":["In un template CloudFormation, qual è lo scopo della sezione 'Resources'?","Genera un'eccezione","Passa con successo","Fallisce all'ultima riga","Compila ma non esegue"]}},{"question":"Inspect the following code snippet. What happens?","answers":["Mockito verifies performAction() was called on service","Mockito throws an exception","performAction() does not get called","Verification happens but fails"],"correct":0,"code":"Service service = Mockito.mock(Service.class);\nDependency dependency = new Dependency(service);\ndependency.doSomething();\nMockito.verify(service).performAction();","translations":{"it":["Quale sarà il risultato della seguente policy JSON?","Mockito verifica che performAction() sia stato chiamato su service","Mockito genera un'eccezione","performAction() non viene chiamato","La verifica avviene ma fallisce"]}},{"question":"What is a correct way to mock a static method using Mockito?","answers":["Using Mockito.mockStatic()","Using Mockito.mock()","Using Mockito.when()","Using Mockito.any()"],"correct":0,"translations":{"it":["Cosa creerà il seguente codice CloudFormation?","Utilizzando Mockito.mockStatic()","Utilizzando Mockito.mock()","Utilizzando Mockito.when()","Utilizzando Mockito.any()"]}},{"question":"Analyze the following code. What is the purpose of the 'thenThrow()' method?","answers":["To return a mock object","To check performance of the method","To simulate throwing an exception","To verify the number of calls"],"correct":2,"code":"Service service = Mockito.mock(Service.class);\nMockito.when(service.getData()).thenThrow(new RuntimeException());","translations":{"it":["Cosa ottiene la seguente policy AWS IAM?","Restituire un oggetto mock","Verificare le prestazioni del metodo","Simulare il lancio di un'eccezione","Verificare il numero di chiamate"]}}]