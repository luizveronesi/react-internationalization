[{"question":"What is the purpose of the @BeforeEach annotation in JUnit 5?","answers":["To mark a method to be executed before all test methods.","To specify a method that will be executed once after all tests are run.","To mark a method to be executed before each test method.","To disable a specific test method."],"correct":2,"translations":{"it":["Qual è lo scopo dell'annotazione @BeforeEach in JUnit 5?","Per contrassegnare un metodo da eseguire prima di tutti i metodi di test.","Per specificare un metodo che verrà eseguito una volta dopo l'esecuzione di tutti i test.","Per contrassegnare un metodo da eseguire prima di ogni metodo di test.","Per disabilitare un metodo di test specifico."]}},{"question":"What is JUnit?","answers":["A mocking framework for writing unit tests in Java.","A code coverage tool for Java applications.","A framework for writing repeatable tests in Java.","An integration testing framework for Java."],"correct":2,"translations":{"it":["Cos'è JUnit?","Un framework di mocking per scrivere test unitari in Java.","Uno strumento di copertura del codice per applicazioni Java.","Un framework per scrivere test ripetibili in Java.","Un framework per test di integrazione per Java."]}},{"question":"What is the correct way to assert that a method throws an exception in JUnit 5?","answers":["Using the @Test(expected = Exception.class) annotation.","Using an assertThrows method.","Using the @ExpectException annotation.","Using the @TestExceptionHandler annotation."],"correct":1,"translations":{"it":["Qual è il modo corretto per asserire che un metodo lancia un'eccezione in JUnit 5?","Utilizzando l'annotazione @Test(expected = Exception.class).","Utilizzando un metodo assertThrows.","Utilizzando l'annotazione @ExpectException.","Utilizzando l'annotazione @TestExceptionHandler."]}},{"question":"When should you use @Nested in JUnit 5?","answers":["To define a test suite.","To group multiple assertions within a single test.","To organize the test classes hierarchically.","To perform integration tests."],"correct":2,"translations":{"it":["Quando dovresti usare @Nested in JUnit 5?","Per definire una suite di test.","Per raggruppare più asserzioni all'interno di un singolo test.","Per organizzare gerarchicamente le classi di test.","Per eseguire test di integrazione."]}},{"question":"What annotation allows you to disable a test in JUnit 5?","answers":["@Ignore","@Disable","@Disabled","@IgnoreTest"],"correct":2,"translations":{"it":["Quale annotazione ti consente di disabilitare un test in JUnit 5?","@Ignore","@Disable","@Disabled","@IgnoreTest"]}},{"question":"Which JUnit 5 assertion method should be used to verify that two objects are equal?","answers":["assertTrue","assertEqual","assertEquals","assertObjectEqual"],"correct":2,"translations":{"it":["Quale metodo di asserzione di JUnit 5 dovrebbe essere utilizzato per verificare che due oggetti siano uguali?","assertTrue","assertEqual","assertEquals","assertObjectEqual"]}},{"question":"What is the purpose of the @ParameterizedTest annotation in JUnit 5?","answers":["To run the same test with a different set of parameters.","To parallelize test execution.","To add a description to a test method.","To repeat a test a specified number of times."],"correct":0,"translations":{"it":["Qual è lo scopo dell'annotazione @ParameterizedTest in JUnit 5?","Per eseguire lo stesso test con un set diverso di parametri.","Per parallelizzare l'esecuzione del test.","Per aggiungere una descrizione a un metodo di test.","Per ripetere un test un numero specificato di volte."]}},{"question":"What is the primary purpose of using assertions in JUnit tests?","answers":["To compile the test classes.","To document the test methods.","To validate the expected results of a test case.","To set up the test environment."],"correct":2,"translations":{"it":["Qual è lo scopo principale dell'utilizzo delle asserzioni nei test JUnit?","Per compilare le classi di test.","Per documentare i metodi di test.","Per convalidare i risultati attesi di un caso di test.","Per impostare l'ambiente di test."]}},{"question":"In JUnit 5, how do you specify that a method should execute after each test method?","answers":["Using the @AfterEach annotation.","Using the @After annotation.","Using the @Cleanup annotation.","Using the @AfterTest annotation."],"correct":0,"translations":{"it":["In JUnit 5, come specifichi che un metodo dovrebbe essere eseguito dopo ogni metodo di test?","Utilizzando l'annotazione @AfterEach.","Utilizzando l'annotazione @After.","Utilizzando l'annotazione @Cleanup.","Utilizzando l'annotazione @AfterTest."]}},{"question":"Consider the following JUnit test method. What is the expected outcome when the method is executed?","answers":["The test will pass.","The test will fail.","The test will be skipped.","The test will throw an runtime exception."],"correct":0,"code":"@Test\nvoid addition() {\n    assertEquals(2, 1 + 1);\n}","translations":{"it":["Considera il seguente metodo di test JUnit. Qual è il risultato previsto quando il metodo viene eseguito?","Il test passerà.","Il test fallirà.","Il test sarà saltato.","Il test lancerà un'eccezione di runtime."]}}]