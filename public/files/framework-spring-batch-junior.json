[{"question":"What is Spring Batch used for?","answers":["For web development","For batch processing","For real-time data processing","For machine learning"],"correct":1,"translations":{"it":["Per cosa viene utilizzato Spring Batch?","Per lo sviluppo web","Per l'elaborazione batch","Per l'elaborazione dei dati in tempo reale","Per il machine learning"]}},{"question":"In Spring Batch, what is a Step?","answers":["A unit of processing work","A database query","A web request","A type of server"],"correct":0,"translations":{"it":["In Spring Batch, cos'è uno Step?","Una unità di lavoro di elaborazione","Una query al database","Una richiesta web","Un tipo di server"]}},{"question":"Which interface defines the central API for batch processing in Spring Batch?","answers":["ItemWriter","Step","Job","JobLauncher"],"correct":3,"translations":{"it":["Quale interfaccia definisce l'API centrale per l'elaborazione batch in Spring Batch?","ItemWriter","Step","Job","JobLauncher"]}},{"question":"What does an ItemProcessor do in Spring Batch?","answers":["Reads data from a source","Writes data to a destination","Processes the data between reading and writing","None of the above"],"correct":2,"translations":{"it":["Cosa fa un ItemProcessor in Spring Batch?","Legge dati da una fonte","Scrive dati su una destinazione","Elabora i dati tra lettura e scrittura","Nessuna delle precedenti"]}},{"question":"Which component of Spring Batch is responsible for reading data?","answers":["ItemWriter","ItemReader","ItemProcessor","BatchListener"],"correct":1,"translations":{"it":["Quale componente di Spring Batch è responsabile della lettura dei dati?","ItemWriter","ItemReader","ItemProcessor","BatchListener"]}},{"question":"Identify the part of a Spring Batch configuration that is incorrect:","answers":["job","step","itemReader","itemProcessor"],"correct":2,"code":"import org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.batch.core.Job;\nimport org.springframework.batch.core.Step;\nimport org.springframework.batch.core.configuration.annotation.EnableBatchProcessing;\nimport org.springframework.batch.core.configuration.annotation.JobBuilderFactory;\nimport org.springframework.batch.core.configuration.annotation.StepBuilderFactory;\nimport org.springframework.batch.item.ItemReader;\n\n@Configuration\n@EnableBatchProcessing\npublic class BatchConfig {\n\n    @Bean\n    public Job myJob(JobBuilderFactory jobBuilderFactory, StepBuilderFactory stepBuilderFactory) {\n        return jobBuilderFactory.get(\"myJob\")\n                .start(stepBuilderFactory.get(\"step1\")\n                        .<String, String>chunk(10)\n                        .reader(itemReader())\n                        .processor(itemProcessor())\n                        .writer(itemWriter())\n                        .build())\n                .build();\n    }\n\n    @Bean\n    public ItemReader<String> itemReader() {\n        return new CustomItemReader();\n    }\n}","translations":{"it":["Identifica la parte di una configurazione Spring Batch che è errata:","job","step","itemReader","itemProcessor"]}},{"question":"What is the purpose of JobRepository in Spring Batch?","answers":["To manage batch jobs","To store meta-information about batch jobs","To execute batch jobs","To read and write data"],"correct":1,"translations":{"it":["Qual è lo scopo di JobRepository in Spring Batch?","Gestire i lavori batch","Memorizzare metainformazioni sui lavori batch","Eseguire i lavori batch","Leggere e scrivere dati"]}},{"question":"Which annotation is used to mark a Spring Batch configuration class?","answers":["@BatchConfig","@BatchProcessing","@EnableBatchProcessing","@EnableBatch"],"correct":2,"translations":{"it":["Quale annotazione viene utilizzata per contrassegnare una classe di configurazione Spring Batch?","@BatchConfig","@BatchProcessing","@EnableBatchProcessing","@EnableBatch"]}},{"question":"Analyze the following code snippet and identify what is missing to complete a basic batch configuration:","answers":["ItemReader","ItemProcessor","Both ItemProcessor and ItemWriter","ItemWriter"],"correct":3,"code":"import org.springframework.context.annotation.Configuration;\nimport org.springframework.batch.core.configuration.annotation.EnableBatchProcessing;\nimport org.springframework.batch.core.configuration.annotation.JobBuilderFactory;\nimport org.springframework.batch.core.configuration.annotation.StepBuilderFactory;\nimport org.springframework.batch.item.ItemReader;\nimport org.springframework.batch.item.ItemProcessor;\n\n@Configuration\n@EnableBatchProcessing\npublic class BatchConfig {\n\n    @Bean\n    public Job myJob(JobBuilderFactory jobBuilderFactory, StepBuilderFactory stepBuilderFactory) {\n        return jobBuilderFactory.get(\"myJob\")\n                .start(stepBuilderFactory.get(\"step1\")\n                        .<String, String>chunk(10)\n                        .reader(itemReader())\n                        .processor(itemProcessor())\n                        .writer(itemWriter())\n                        .build())\n                .build();\n    }\n\n    @Bean\n    public ItemReader<String> itemReader() {\n        return new CustomItemReader();\n    }\n\n    @Bean\n    public ItemProcessor<String, String> itemProcessor() {\n        return new CustomItemProcessor();\n    }\n}","translations":{"it":["Analizza il seguente frammento di codice e identifica cosa manca per completare una configurazione batch di base:","ItemReader","ItemProcessor","Sia ItemProcessor che ItemWriter","ItemWriter"]}},{"question":"Examine the provided code and determine what is incorrect:","answers":["The reader method","The processor method","The writer method","Everything is correct"],"correct":3,"code":"import org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.batch.core.Job;\nimport org.springframework.batch.core.Step;\nimport org.springframework.batch.core.configuration.annotation.EnableBatchProcessing;\nimport org.springframework.batch.core.configuration.annotation.JobBuilderFactory;\nimport org.springframework.batch.core.configuration.annotation.StepBuilderFactory;\nimport org.springframework.batch.item.ItemReader;\nimport org.springframework.batch.item.ItemProcessor;\nimport org.springframework.batch.item.ItemWriter;\n\n@Configuration\n@EnableBatchProcessing\npublic class BatchConfig {\n\n    @Bean\n    public Job myJob(JobBuilderFactory jobBuilderFactory, StepBuilderFactory stepBuilderFactory) {\n        return jobBuilderFactory.get(\"myJob\")\n                .start(stepBuilderFactory.get(\"step1\")\n                        .<String, String>chunk(10)\n                        .reader(itemReader())\n                        .processor(itemProcessor())\n                        .writer(itemWriter())\n                        .build())\n                .build();\n    }\n\n    @Bean\n    public ItemReader<String> itemReader() {\n        return new CustomItemReader();\n    }\n\n    @Bean\n    public ItemProcessor<String, String> itemProcessor() {\n        return new CustomItemProcessor();\n    }\n\n    @Bean\n    public ItemWriter<String> itemWriter() {\n        return new CustomItemWriter();\n    }\n}","translations":{"it":["Esamina il codice fornito e determina cosa è errato:","Il metodo reader","Il metodo processor","Il metodo writer","Tutto è corretto"]}}]