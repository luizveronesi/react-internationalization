[{"question":"What is Spring MVC?","answers":["A framework for building web applications.","A library for handling database connections.","A tool for developing Android applications.","A platform for building microservices."],"correct":0,"translations":{"it":["Cos'è Spring MVC?","Un framework per la costruzione di applicazioni web.","Una libreria per la gestione delle connessioni al database.","Uno strumento per lo sviluppo di applicazioni Android.","Una piattaforma per la costruzione di microservizi."]}},{"question":"Which annotation is used to define a Controller in Spring MVC?","answers":["@Service","@Entity","@Repository","@Controller"],"correct":3,"translations":{"it":["Quale annotazione viene utilizzata per definire un Controller in Spring MVC?","@Service","@Entity","@Repository","@Controller"]}},{"question":"What is the purpose of the @RequestMapping annotation?","answers":["To map HTTP requests to handler methods.","To configure database connections.","To define service classes.","To handle exceptions in controllers."],"correct":0,"translations":{"it":["Qual è lo scopo dell'annotazione @RequestMapping?","Per mappare le richieste HTTP ai metodi del gestore.","Per configurare le connessioni del database.","Per definire le classi di servizio.","Per gestire le eccezioni nei controller."]}},{"question":"Which of the following is a correct way to define a method that handles a GET request in Spring MVC?","answers":["@GetMapping(\"/path\")","@PostMapping(\"/path\")","@PutMapping(\"/path\")","@DeleteMapping(\"/path\")"],"correct":0,"translations":{"it":["Quale dei seguenti è un modo corretto per definire un metodo che gestisce una richiesta GET in Spring MVC?","@GetMapping(\"/path\")","@PostMapping(\"/path\")","@PutMapping(\"/path\")","@DeleteMapping(\"/path\")"]}},{"question":"What is the correct way to return a view name from a controller method?","answers":["return new ModelAndView(\"home\");","return \"home\";","render \"home\";","redirect to \"home\";"],"correct":1,"code":"public String getHome() {\n    return \"home\";\n}","translations":{"it":["Qual è il modo corretto per restituire un nome di vista da un metodo del controller?","return new ModelAndView(\"home\");","return \"home\";","render \"home\";","redirect to \"home\";"]}},{"question":"Which of the following is used to bind a URL parameter to a method parameter in Spring MVC?","answers":["@PathVariable","@RequestParam","@ModelAttribute","@RequestBody"],"correct":1,"code":"@RequestMapping(\"/greeting\")\npublic String greeting(@RequestParam String name, Model model) {\n    model.addAttribute(\"name\", name);\n    return \"welcome\";\n}","translations":{"it":["Quale dei seguenti viene utilizzato per associare un parametro URL a un parametro del metodo in Spring MVC?","@PathVariable","@RequestParam","@ModelAttribute","@RequestBody"]}},{"question":"In Spring MVC, what does the @ModelAttribute annotation do?","answers":["Maps a form attribute to a method parameter.","Maps a path variable to a method parameter.","Extracts data from the request body.","Defines a model object that will be available in the view."],"correct":3,"translations":{"it":["In Spring MVC, cosa fa l'annotazione @ModelAttribute?","Mappa un attributo del modulo a un parametro del metodo.","Mappa una variabile di percorso a un parametro del metodo.","Estrae i dati dal corpo della richiesta.","Definisce un oggetto modello che sarà disponibile nella vista."]}},{"question":"Which of the following is correct for mapping URL segments to method parameters?","answers":["Using @RequestParam(\"id\")","Using @PathVariable(\"id\")","Using @ModelAttribute(\"id\")","Using @RequestBody(\"id\")"],"correct":1,"code":"@RequestMapping(\"/user/{id}\")\npublic String getUser(@PathVariable String id) {\n    System.out.println(id);\n    return \"user\";\n}","translations":{"it":["Quale dei seguenti è corretto per mappare i segmenti URL ai parametri del metodo?","Usando @RequestParam(\"id\")","Usando @PathVariable(\"id\")","Usando @ModelAttribute(\"id\")","Usando @RequestBody(\"id\")"]}},{"question":"What does the @RestController annotation do in Spring MVC?","answers":["Marks a class as a Spring MVC Controller and includes @ResponseBody by default.","Marks a method for exception handling.","Indicates that a method handles a web request.","Marks a class as a Spring component."],"correct":0,"translations":{"it":["Cosa fa l'annotazione @RestController in Spring MVC?","Segna una classe come Spring MVC Controller e include @ResponseBody per impostazione predefinita.","Segna un metodo per la gestione delle eccezioni.","Indica che un metodo gestisce una richiesta web.","Segna una classe come componente Spring."]}},{"question":"How would you handle form submission in Spring MVC?","answers":["Using @ModelAttribute to bind form fields to a model object.","Using @RequestParam to parse the form fields.","Using @RequestBody to bind form fields.","By parsing form fields manually."],"correct":0,"code":"@PostMapping(\"/submitForm\")\npublic String submitForm(@ModelAttribute User user) {\n    // process the user object\n    return \"formSuccess\";\n}","translations":{"it":["Come gestiresti l'invio di un modulo in Spring MVC?","Usando @ModelAttribute per collegare i campi del modulo a un oggetto modello.","Usando @RequestParam per analizzare i campi del modulo.","Usando @RequestBody per collegare i campi del modulo.","Analizzando manualmente i campi del modulo."]}}]