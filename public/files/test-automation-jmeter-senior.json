[
  {
    "question": "Which of the following is not a type of listener in JMeter?",
    "answers": [
      "View Results Tree",
      "Aggregate Report",
      "Table Listener",
      "Simple Data Writer"
    ],
    "correct": 2,
    "translations": {
      "it": [
        "Quale dei seguenti non è un tipo di listener in JMeter?",
        "Visualizza l'albero dei risultati",
        "Rapporto aggregato",
        "Listener di tabella",
        "Scrittore di dati semplice"
      ]
    }
  },
  {
    "question": "How can you parameterize a sampler in JMeter?",
    "answers": [
      "Using variables",
      "Using assertions",
      "Using transaction controllers",
      "Using timers"
    ],
    "correct": 0,
    "translations": {
      "it": [
        "Come puoi parametrizzare un campionatore in JMeter?",
        "Usando le variabili",
        "Utilizzando le asserzioni",
        "Utilizzando i controlli delle transazioni",
        "Utilizzando i timer"
      ]
    }
  },
  {
    "question": "What happens if a transaction controller is used in 'Generate Parent Sample' mode?",
    "answers": [
      "It generates a separate sample for each child request",
      "It does not generate any samples",
      "It combines results from child samples into one",
      "It slows down the test plan execution"
    ],
    "correct": 2,
    "translations": {
      "it": [
        "Cosa succede se si usa un Transaction Controller in modalità 'Generate Parent Sample'?",
        "Genera un campione separato per ogni richiesta figlio",
        "Non genera alcun campione",
        "Combina i risultati dai campioni figli in uno solo",
        "Rallenta l'esecuzione del piano di test"
      ]
    }
  },
  {
    "question": "Identify the purpose of the following JSR223 code snippet:",
    "answers": [
      "Send an email",
      "Start a transaction",
      "Log a message in JMeter log",
      "Extract a variable from previous response"
    ],
    "correct": 2,
    "code": "log.info('This is a log message');",
    "translations": {
      "it": [
        "Identifica lo scopo del seguente snippet di codice JSR223:",
        "Che tipo di servizio è Amazon EC2?",
        "Identificare lo scopo del seguente frammento di codice JSR223:",
        "Inviare un'email",
        "Avviare una transazione",
        "Registrare un messaggio nel log di JMeter",
        "Estrarre una variabile dalla risposta precedente",
        "log.info('Questo è un messaggio di log');"
      ]
    }
  },
  {
    "question": "What effect does the 'Throughput Shaping Timer' have in a JMeter test?",
    "answers": [
      "It pauses the test until a specified condition is met",
      "It shapes the traffic to meet a specified throughput",
      "It sets the duration for each sampler",
      "It adds latency to each request"
    ],
    "correct": 1,
    "translations": {
      "it": [
        "Quale effetto ha il 'Throughput Shaping Timer' in un test JMeter?",
        "Mette in pausa il test fino a quando una condizione specificata non è soddisfatta",
        "Modella il traffico per raggiungere una velocità specifica",
        "Imposta la durata di ciascun campionatore",
        "Aggiunge latenza a ciascuna richiesta"
      ]
    }
  },
  {
    "question": "What does the following Beanshell listener script do?",
    "answers": [
      "Logs success message",
      "Stops the test when an error occurs",
      "Increments a counter",
      "Sends an HTTP post request"
    ],
    "correct": 1,
    "code": "if (prev.isError()) {\n    log.error('Test failed, stopping the test');\n    ctx.getEngine().stopTest();\n}",
    "translations": {
      "it": [
        "Cosa fa il seguente script Beanshell listener?",
        "In un template CloudFormation, qual è lo scopo della sezione 'Resources'?",
        "Cosa fa il seguente script BeanShell listener?",
        "Registra un messaggio di successo",
        "Ferma il test quando si verifica un errore",
        "Incrementa un contatore",
        "Invia una richiesta post HTTP",
        "if (prev.isError()) {\n    log.error('Test fallito, fermare il test');\n    ctx.getEngine().stopTest();\n}"
      ]
    }
  },
  {
    "question": "In JMeter, what is the purpose of using assertions?",
    "answers": [
      "To validate responses",
      "To parameterize test data",
      "To add delay between requests",
      "To define user log-in information"
    ],
    "correct": 0,
    "translations": {
      "it": [
        "In JMeter, qual è lo scopo di usare le assertions?",
        "Per convalidare le risposte",
        "Per parametrizzare i dati di prova",
        "Per aggiungere ritardo tra le richieste",
        "Per definire le informazioni di accesso utente"
      ]
    }
  },
  {
    "question": "What is the use of the 'View Results Tree' listener?",
    "answers": [
      "To visualize the request and response details",
      "To control the flow of execution",
      "To log the errors",
      "To parameterize the load test"
    ],
    "correct": 0,
    "translations": {
      "it": [
        "Qual è l'uso del listener 'View Results Tree'?",
        "Per visualizzare i dettagli della richiesta e della risposta",
        "Per controllare il flusso di esecuzione",
        "Per registrare gli errori",
        "Per parametrizzare il test di carico"
      ]
    }
  },
  {
    "question": "Analyze the purpose of this JMeter Regular Expression Extractor configuration:",
    "answers": [
      "Extracts a token for authentication",
      "Generates random strings",
      "Simulates user actions",
      "Creates a load distribution"
    ],
    "correct": 0,
    "code": "<RegularExpressionExtractor guiclass=\"RegexExtractorGui\"\n     testclass=\"RegexExtractor\"\n     testname=\"Regular Expression Extractor\"\n     enabled=\"true\">\n    <stringProp name=\"RegexExtractor.useHeaders\">false</stringProp>\n    <stringProp name=\"RegexExtractor.refname\">auth_token</stringProp>\n    <stringProp name=\"RegexExtractor.regex\">token=(.+?)&</stringProp>\n    <stringProp name=\"RegexExtractor.template\">$1$</stringProp>\n    <stringProp name=\"RegexExtractor.default\"></stringProp>\n    <stringProp name=\"RegexExtractor.match_number\">1</stringProp>\n</RegularExpressionExtractor>",
    "translations": {
      "it": [
        "Analizza lo scopo di questa configurazione del Regular Expression Extractor in JMeter:",
        "Cosa ottiene la seguente policy AWS IAM?",
        "Analizzare lo scopo di questa configurazione dell'estrattore di espressioni regolari di JMeter:",
        "Estrae un token per l'autenticazione",
        "Genera stringhe casuali",
        "Simula le azioni dell'utente",
        "Crea una distribuzione del carico",
        "<RegularExpressionExtractor guiclass=\"RegexExtractorGui\"\n     testclass=\"RegexExtractor\"\n     testname=\"Regular Expression Extractor\"\n     enabled=\"true\">\n    <stringProp name=\"RegexExtractor.useHeaders\">false</stringProp>\n    <stringProp name=\"RegexExtractor.refname\">auth_token</stringProp>\n    <stringProp name=\"RegexExtractor.regex\">token=(.+?)&</stringProp>\n    <stringProp name=\"RegexExtractor.template\">$1$</stringProp>\n    <stringProp name=\"RegexExtractor.default\"></stringProp>\n    <stringProp name=\"RegexExtractor.match_number\">1</stringProp>\n</RegularExpressionExtractor>"
      ]
    }
  },
  {
    "question": "Identify the mistake in the following JMeter configuration for a HTTP request.",
    "answers": [
      "The method is set to GET instead of POST",
      "The IP address is set incorrectly",
      "The protocol is missing",
      "The port number is set to 80 instead of 443"
    ],
    "correct": 2,
    "code": "HTTP Request\n{\n   Name: API Test\n   Server Name or IP: example.com\n   Port Number: 443\n   Method: GET\n   Path: /api/data\n}",
    "translations": {
      "it": [
        "Identifica l'errore nella seguente configurazione di una richiesta HTTP in JMeter.",
        "Il metodo è impostato su GET anziché su POST",
        "L'indirizzo IP è impostato in modo errato",
        "Il protocollo è mancante",
        "Il numero di porta è impostato su 80 anziché su 443"
      ]
    }
  }
]
