[
  {
    "question": "What is the main purpose of TypeScript?",
    "answers": [
      "To add static types to JavaScript",
      "To execute code faster than JavaScript",
      "To style web pages",
      "To interact with databases"
    ],
    "correct": 0,
    "translations": {
      "it": [
        "Qual è lo scopo principale di TypeScript?",
        "Aggiungere tipi statici a JavaScript",
        "Eseguire il codice più velocemente di JavaScript",
        "Stilizzare le pagine web",
        "Interagire con i database"
      ]
    }
  },
  {
    "question": "Which command is used to compile TypeScript code?",
    "answers": ["tsc", "node", "tsrun", "npm start"],
    "correct": 0,
    "translations": {
      "it": [
        "Quale comando viene utilizzato per compilare il codice TypeScript?",
        "tsc",
        "node",
        "tsrun",
        "npm start"
      ]
    }
  },
  {
    "question": "What file extension is typically used for TypeScript files?",
    "answers": [".js", ".ts", ".json", ".jsx"],
    "correct": 1,
    "translations": {
      "it": [
        "Quale estensione di file viene tipicamente utilizzata per i file TypeScript?",
        ".js",
        ".ts",
        ".json",
        ".jsx"
      ]
    }
  },
  {
    "question": "Which of the following is a TypeScript feature?",
    "answers": [
      "Optional static typing",
      "Built-in database interaction",
      "Automatic UI generation",
      "Inline CSS support"
    ],
    "correct": 0,
    "translations": {
      "it": [
        "Quale delle seguenti è una caratteristica di TypeScript?",
        "Tipizzazione statica opzionale",
        "Interazione con il database integrata",
        "Generazione automatica dell'interfaccia utente",
        "Supporto CSS in linea"
      ]
    }
  },
  {
    "question": "How do you define a variable with a string type in TypeScript?",
    "answers": [
      "let name: string;",
      "var name: String;",
      "const name = 'Hello';",
      "let name = 'Hello';"
    ],
    "correct": 0,
    "code": "let name: string;",
    "translations": {
      "it": [
        "Come definisci una variabile con un tipo stringa in TypeScript?",
        "let name: string;",
        "var name: String;",
        "const name = 'Hello';",
        "let name = 'Hello';"
      ]
    }
  },
  {
    "question": "What will be the output of the following TypeScript code?",
    "answers": ["5", "10", "Compilation error", "Runtime error"],
    "correct": 1,
    "code": "let a: number = 5;\nlet b: number = 5;\nconsole.log(a + b);",
    "translations": {
      "it": [
        "Quale sarà l'output del seguente codice TypeScript?",
        "5",
        "10",
        "Errore di compilazione",
        "Errore di runtime"
      ]
    }
  },
  {
    "question": "Which TypeScript keyword is used for iterating over all properties of an object?",
    "answers": ["for", "foreach", "for...in", "for...of"],
    "correct": 2,
    "translations": {
      "it": [
        "Quale parola chiave TypeScript viene utilizzata per iterare su tutte le proprietà di un oggetto?",
        "for",
        "foreach",
        "for...in",
        "for...of"
      ]
    }
  },
  {
    "question": "What does the following TypeScript function return?",
    "answers": ["Hello World", "World", "undefined", "Compilation error"],
    "correct": 0,
    "code": "function greet(): string {\n  return 'Hello World';\n}",
    "translations": {
      "it": [
        "Cosa restituisce la seguente funzione TypeScript?",
        "Hello World",
        "World",
        "undefined",
        "Errore di compilazione"
      ]
    }
  },
  {
    "question": "How can you specify an optional property in a TypeScript interface?",
    "answers": [
      "By appending a question mark '?' to the property name",
      "By appending an exclamation mark '!' to the property name",
      "By using the keyword 'optional'",
      "By declaring the property as 'null'"
    ],
    "correct": 0,
    "translations": {
      "it": [
        "Come puoi specificare una proprietà opzionale in un'interfaccia TypeScript?",
        "Apponendo un punto interrogativo '?' al nome della proprietà",
        "Apponendo un punto esclamativo '!' al nome della proprietà",
        "Uso della parola chiave 'optional'",
        "Dichiarando la proprietà come 'null'"
      ]
    }
  },
  {
    "question": "What is a Tuple in TypeScript?",
    "answers": [
      "A data structure that maps keys to values",
      "A data structure that contains one or more data types in an ordered sequence",
      "A function that returns a value",
      "A type-safe array"
    ],
    "correct": 1,
    "translations": {
      "it": [
        "Cos'è una Tuple in TypeScript?",
        "Una struttura dati che mappa chiavi a valori",
        "Una struttura dati che contiene uno o più tipi di dati in una sequenza ordinata",
        "Una funzione che restituisce un valore",
        "Un array con tipizzazione sicura"
      ]
    }
  }
]
