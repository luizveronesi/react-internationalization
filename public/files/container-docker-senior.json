[
  {
    "question": "What is the primary difference between a Docker image and a Docker container?",
    "answers": [
      "A Docker image is a running instance of a Docker container.",
      "A Docker container is a read-only template used to create Docker images.",
      "A Docker image is a packaged application with all dependencies, while a Docker container is a running instance of that image.",
      "A Docker container is a template, and a Docker image is the executable form."
    ],
    "correct": 2,
    "translations": {
      "it": [
        "Qual è la differenza principale tra un'immagine Docker e un contenitore Docker?",
        "Un'immagine Docker è un'istanza in esecuzione di un container Docker.",
        "Un container Docker è un modello di sola lettura utilizzato per creare immagini Docker.",
        "Un'immagine Docker è un'applicazione confezionata con tutte le dipendenze, mentre un container Docker è un'istanza in esecuzione di quell'immagine.",
        "Un container Docker è un modello e un'immagine Docker è nella forma eseguibile."
      ]
    }
  },
  {
    "question": "How do you persist data generated by and used by Docker containers?",
    "answers": [
      "Using Docker volumes or bind mounts.",
      "Using Dockerfiles within the image.",
      "Persisting data is not possible in Docker.",
      "Storing data directly on the Docker Hub."
    ],
    "correct": 0,
    "translations": {
      "it": [
        "Come si persiste il dati generati e usati dai contenitori Docker?",
        "Utilizzando volumi Docker o bind mount.",
        "Utilizzando Dockerfile all'interno dell'immagine.",
        "Persistere i dati non è possibile in Docker.",
        "Memorizzare i dati direttamente su Docker Hub."
      ]
    }
  },
  {
    "question": "What command would you use to remove all stopped containers?",
    "answers": [
      "docker ps -a",
      "docker rm $(docker ps -a -q)",
      "docker stop $(docker ps -q)",
      "docker rm -f $(docker ps -q)"
    ],
    "correct": 1,
    "translations": {
      "it": [
        "Quale comando useresti per rimuovere tutti i container fermati?",
        "docker ps -a",
        "docker rm $(docker ps -a -q)",
        "docker stop $(docker ps -q)",
        "docker rm -f $(docker ps -q)"
      ]
    }
  },
  {
    "question": "Which of the following command sequences will build a Docker image and run a container from it?",
    "answers": [
      "docker image build && docker container run",
      "docker build && docker run",
      "docker build . && docker run",
      "docker build -t myimage . && docker run myimage"
    ],
    "correct": 3,
    "translations": {
      "it": [
        "Quale delle seguenti sequenze di comandi costruirà un'immagine Docker e eseguirà un container da essa?",
        "docker image build && docker container run",
        "docker build && docker run",
        "docker build . && docker run",
        "docker build -t myimage . && docker run myimage"
      ]
    }
  },
  {
    "question": "Which command is used to list all the images on your local Docker system?",
    "answers": [
      "docker images",
      "docker ps -a",
      "docker list images",
      "docker container ls"
    ],
    "correct": 0,
    "translations": {
      "it": [
        "Quale comando viene utilizzato per elencare tutte le immagini presenti nel tuo sistema Docker locale?",
        "docker images",
        "docker ps -a",
        "docker list images",
        "docker container ls"
      ]
    }
  },
  {
    "question": "What does the following Dockerfile command do?",
    "answers": [
      "Copies the contents of the working directory on the host into the /app directory in the container.",
      "It sets the working directory inside the container to /app.",
      "It moves files from the /app directory in the container to the host's working directory.",
      "It changes the permissions of the /app directory inside the container."
    ],
    "correct": 0,
    "code": "COPY . /app",
    "translations": {
      "it": [
        "Cosa fa il seguente comando Dockerfile?",
        "Copia il contenuto della directory di lavoro sull'host nella directory /app all'interno del container.",
        "Imposta la directory di lavoro all'interno del container su /app.",
        "Sposta i file dalla directory /app nel container alla directory di lavoro dell'host.",
        "Cambia i permessi della directory /app all'interno del container."
      ]
    }
  },
  {
    "question": "Given the following Dockerfile, which command can be used to build an image?",
    "answers": [
      "docker compose",
      "docker image build -t myimage .",
      "docker container build",
      "docker run build myimage"
    ],
    "correct": 1,
    "code": "FROM node:14\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nCMD [ \"node\", \"server.js\" ]",
    "translations": {
      "it": [
        "Dato il seguente Dockerfile, quale comando può essere utilizzato per costruire un'immagine?",
        "docker compose",
        "docker image build -t myimage .",
        "docker container build",
        "docker run build myimage"
      ]
    }
  },
  {
    "question": "What would the command `docker run -d -p 80:80 nginx` do?",
    "answers": [
      "Run the nginx container in the foreground and map port 80 on the host to port 80 in the container.",
      "Run the nginx container in the background and map port 80 on the host to port 80 in the container.",
      "Run the nginx container in the background and expose port 80 only within the container network.",
      "Run the nginx container in the foreground and expose port 80 to the container network."
    ],
    "correct": 1,
    "translations": {
      "it": [
        "Cosa farebbe il comando `docker run -d -p 80:80 nginx`?",
        "Esegue il container nginx in primo piano e mappa la porta 80 sull'host alla porta 80 nel container.",
        "Esegue il container nginx in background e mappa la porta 80 sull'host alla porta 80 nel container.",
        "Esegue il container nginx in background ed espone la porta 80 solo all'interno della rete del container.",
        "Esegue il container nginx in primo piano ed espone la porta 80 alla rete del container."
      ]
    }
  },
  {
    "question": "What does the following Docker command accomplish? `docker-compose up -d`",
    "answers": [
      "Starts services in detached mode as defined in docker-compose.yml.",
      "Lists all running containers in detached mode.",
      "Removes all stopped services and containers.",
      "Runs all services in foreground mode as defined in docker-compose.yml."
    ],
    "correct": 0,
    "translations": {
      "it": [
        "Cosa fa il seguente comando Docker? `docker-compose up -d`",
        "Avvia i servizi in modalità staccata come definito in docker-compose.yml.",
        "Elenca tutti i container in esecuzione in modalità staccata.",
        "Rimuove tutti i servizi e i container fermati.",
        "Esegue tutti i servizi in modalità foreground come definito in docker-compose.yml."
      ]
    }
  },
  {
    "question": "What is the purpose of the `EXPOSE` instruction in a Dockerfile?",
    "answers": [
      "To make the application inside the container accessible from outside.",
      "To document which ports the container will use at runtime.",
      "To automatically open ports on the host machine.",
      "To specify the port to be used for health checks."
    ],
    "correct": 1,
    "translations": {
      "it": [
        "Qual è lo scopo dell'istruzione `EXPOSE` in un Dockerfile?",
        "Per rendere l'applicazione all'interno del container accessibile dall'esterno.",
        "Per documentare quali porte utilizzerà il container in fase di esecuzione.",
        "Per aprire automaticamente le porte sulla macchina host.",
        "Per specificare la porta da utilizzare per i controlli di salute."
      ]
    }
  }
]
